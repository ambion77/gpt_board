<queries>
    <query id="getAllUsers">SELECT * FROM users;</query>
    <query id="getUserById">SELECT * FROM users WHERE userid = ?;</query>
    <query id="addUser">INSERT INTO users (userid, username, email, password) VALUES (?, ?, ?, ?);</query>
    <query id="updateUser">UPDATE users SET username = ?, email = ? WHERE id = ?;</query>
    <query id="deleteUser">DELETE FROM users WHERE id = ?;</query>
    <query id="getMenuTree">
          WITH RECURSIVE menu_tree AS (
            SELECT 
                menu_id,
                menu_code,
                menu_name,
                parent_id,
                depth,
                url,
                CAST(menu_name AS CHAR(255)) AS path,
                CAST(sort_order AS CHAR(255)) AS sort_path,
                sort_order
            FROM menu
            WHERE parent_id IS NULL
            
            UNION ALL
            
            SELECT 
                m.menu_id,
                m.menu_code,
                m.menu_name,
                m.parent_id,
                m.depth,
                m.url,
                CONCAT(mt.path, ' > ', m.menu_name),
                CONCAT(mt.sort_path, '-', LPAD(m.sort_order, 5, '0')),
                m.sort_order
            FROM menu m
            INNER JOIN menu_tree mt ON m.parent_id = mt.menu_id
        )
        SELECT 
            menu_id,
            menu_code,
            menu_name,
            depth,
            url,
            path
        FROM menu_tree
        ORDER BY sort_path;
    </query>
    <query id="getImageListWithPaginationCount">SELECT count(*) as totalCount FROM base64_images;</query>
    <query id="getImageListWithPagination">SELECT id,image_name,base64_data,file_name,width,height, size FROM base64_images order by created_date desc LIMIT ? OFFSET ? ;</query>
    <query id="getImageList">SELECT id,image_name,base64_data,file_name,width,height, size FROM base64_images;</query>
    <query id="getImageInfo">SELECT id,image_name,base64_data,width,height,size FROM base64_images WHERE id = ?;</query>
    <query id="insertImage">
        INSERT INTO base64_images
        (image_name, file_name, base64_data,width, height, size)
        VALUES
        (?, ?, ?, ?, ?, ?);
    </query>
    <query id="deleteImages">DELETE FROM base64_images WHERE id IN (?);</query>

    <query id="getBoardListWithPaginationCount">SELECT count(*) as totalCount FROM board;</query>
    <query id="getBoardListWithPagination">
        SELECT b.id, b.title, b.content, b.author, b.views, b.parent_id, b.depth, DATE_FORMAT(b.created_date, "%Y/%m/%d %T") as created_date
        FROM board b
        order by b.created_date desc LIMIT ? OFFSET ? ;
    </query>
    <query id="getBoardInfo">
        SELECT b.id, b.title, b.content, b.author, b.parent_id, b.depth, bf.id as file_id ,bf.file_path, bf.file_type, bf.file_name
        FROM board b left outer JOIN  board_file bf ON b.id = bf.board_id 
        WHERE b.id = ?;</query>
    <query id="insertBoard">
        INSERT INTO board
        (title, content, author,views)
        VALUES
        (?, ?, ?, 0);
    </query>
    <query id="insertBoardFile">
        INSERT INTO board_file
        (board_id, file_name, file_type, file_path, file_size)
        VALUES
        (?, ?, ?, ?, ?);
    </query>
    <query id="deleteBoards">DELETE FROM board WHERE id IN (?);</query>
    <query id="deleteBoardsFile">DELETE FROM board_file WHERE board_id IN (?);</query>
    <query id="insertReply">
        INSERT INTO board
        (title, content, parent_id,author,depth)
        VALUES
        (?, ?, ?, ?, ?);
    </query>
    <query id="updateBoard">UPDATE board SET title = ?, content = ? WHERE id = ?;</query>
    <query id="updateBoardView">UPDATE board SET views = views + 1 WHERE id = ?;</query>

    <query id="insertCrawling">
        INSERT INTO crawling (text, author, crawled_date)
        VALUES (?, ?, ?);
    </query>
    <query id="insertNews">
        INSERT INTO news (title, link, pub_date, crawled_date)
        VALUES (?, ?, ?, ?)
    </query>

    <query id="getNewsListWithPagination">
        SELECT id, title, link, pub_date, crawled_date 
        FROM news 
        ORDER BY id DESC 
        LIMIT ? OFFSET ?
    </query>    
    <query id="getNewsListWithPaginationCount">
        SELECT COUNT(*) AS count FROM news
    </query>
    <query id="selectNews">
        SELECT id, title, link, pub_date, crawled_date
        FROM news 
        ORDER BY pub_date DESC
    </query>

    <query id="insertExcelFile">
        INSERT INTO excel_file (file_name, file_data) VALUES (?, ?);
    </query>
    <query id="getExcelDataList">        
        SELECT main_id, title, file_name, DATE_FORMAT(MIN(created_date), "%Y/%m/%d %T")  AS created_date 
        FROM excel_data 
        GROUP BY main_id, title, file_name 
        ORDER BY created_date DESC
    </query>    
    <query id="getExcelDataDetail">
        SELECT * 
        FROM excel_data 
        WHERE title = ? AND file_name = ? 
        ORDER BY rownum
    </query>  
</queries>
